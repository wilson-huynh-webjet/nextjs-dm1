import Head from 'next/head'
import React from 'react';

// @ts-ignore
import Notification from '@webjet/react/components/notification' 
// @ts-ignore
import Accordion from '@webjet/react/components/accordion';
// @ts-ignore
import IconGuestServices from '@webjet/react-icons/guest-services';
// @ts-ignore
import IconFood from '@webjet/react-icons/food';
// @ts-ignore
import IconParking from '@webjet/react-icons/parking';

// @ts-ignore
import Banner from '@webjet/react/components/banner';

// @ts-ignore
import Link from '@webjet/react/components/link';

// @ts-ignore
import Button from "@webjet/react/components/button";
// @ts-ignore
import { Modal } from "@webjet/react/components/modal";

// @ts-ignore
import Select from '@webjet/react/components/select'

// @ts-ignore
import ProductNavigation from '@webjet/react/components/product-navigation';

const optionList = [
  { value: 'Economy', label: 'Economy' },
  { value: 'Premium', label: 'Premium Economy', isDisabled: true },
  { value: 'Business', label: 'Business' },
  { value: 'First', label: 'First' }
]


type Navigation = {
  productNavigation: {
    primary: {
      title: string
      keys: string[]
    }
    secondary: {
      title: string
      keys: string[]
    }
  }
  links: {
    [key: string]: {
      label: string
      href: string
      target?: string
    }
  }
}

export const getServerSideProps = async () => {
  // Fetch data from external config module
  const response = await fetch('https://static.dev.webjet.com.au/web/ui/poc/navigation/newconfig/config.1744087004419.js');
  const jsConfig = await response.text()
  const configDataUri = 'data:text/javascript;charset=utf-8,' + encodeURIComponent(jsConfig)
  const navigation: Navigation = await import(/* webpackIgnore: true */configDataUri).then(module => module.default)
  return { props: { navigation } }
}

export default function Home ({ navigation }: { navigation: Navigation }) {
  const [show, setShow] = React.useState(false);
  const {productNavigation, links} = navigation || {};
  const { primary, secondary } = productNavigation || {};

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
        <link href="https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap" rel="stylesheet" />
      </Head>
      <main>
        <ProductNavigation primary={primary} secondary={secondary} links={links} activeItem='flights' />
        
        <div className='w-800'>
          <h2>Notification</h2>
          <Notification type='success' prominence='high'>
            <h3>This is the heading for the notification.</h3>
            This is the body text that is used within a notification.
          </Notification>
          <br />
          <Notification type='info' prominence='high'>
            <h3>This is the heading for the notification.</h3>
            This is the body text that is used within a notification.
          </Notification>

          <h2>Banner</h2>
          <Banner isMultiline={false}>
            <h3>Lorem ipsum.</h3>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit aliquam feugiat. <Link href="#">*T&C's apply.</Link>
          </Banner>

          <h2>Accordion</h2>
          <Accordion heading='Guest services' icon={IconGuestServices} headingBgColor='#FFFFFF' arrowType='arrow' isExpanded={false}>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit aliquam feugiat
          </Accordion>
          <Accordion heading='Food & Drink' icon={IconFood} headingBgColor='#FFFFFF' arrowType='arrow' isExpanded={false}>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit aliquam feugiat
          </Accordion>
          <Accordion heading='Parking & Transport' icon={IconParking} headingBgColor='#FFFFFF' arrowType='arrow' isExpanded={false}>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit aliquam feugiat
          </Accordion>
        </div>
        <div className='w-300'>
          <h2>Select List</h2>
          <Select
            placeholder='Please select one'
            options={optionList}
            portalTarget={false}
            name='fare-types'
            />
        </div>

        <h2>Modal</h2>

        <div className="demo">
            <Modal show={show} title="Lorem ipsum" closeBtnText="Close" onToggle={() => setShow(!show)}>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
            </Modal>
            <Button version={2} onClick={() => setShow(!show)}>
              Show modal
            </Button>
        </div>
      </main>
    </>
  )
}
